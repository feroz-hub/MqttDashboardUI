@page
@model IndexModel
@{
    ViewData["Title"] = "MQTT Subscriber";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/Index.css">
</head>
<body>
<div class="index-container">
    <div class="index-sidebar">
        <h3>MQTT Menu</h3>
        <div class="dropdown">
            <button class="dropbtn">Menu</button>
            <div class="dropdown-content">
                <a href="#" onclick="showSection('messages')">Messages</a>
                <a href="#" onclick="showSection('clients')">Clients</a>
                <a href="#" onclick="showSection('connection')">Connection</a>
            </div>
        </div>
        <h3>Subscribed Topics (@Model.SubscribedTopics.Count())</h3>
        <form method="post">
            <label for="topic">Enter Topic:</label>
            <input type="text" id="topic" name="topic" required>
            <button type="submit">Subscribe</button>
        </form>
        @if (Model.ErrorMessage != null)
        {
        <div class="error-message">@Model.ErrorMessage</div>
        }
        <ul id="subscribedTopicsList">
            @foreach (var topic in Model.SubscribedTopics)
            {
            <li data-topic="@topic">@topic <span id="count-@topic.Replace("/", "_")">@Model.GetMessageCountForTopic(topic)</span></li>
            }
        </ul>
    </div>
    <div class="index-content">
        <h2>MQTT Subscriber</h2>
        <div id="messages-section" class="section">
            <h3>Messages</h3>
            <ul id="messagesList">
                @foreach (var message in Model.Messages)
                {
                <li>@message</li>
                }
            </ul>
        </div>
        <div id="clients-section" class="section" style="display: none;">
            <h3>Clients</h3>
            <p>Client details will be shown here.</p>
        </div>
        <div id="connection-section" class="section" style="display: none;">
            <h3>Connection</h3>
            <p>Connection details will be shown here.</p>
        </div>
    </div>
</div>
</body>
</html>

<script>
    async function fetchMessages() {
        const response = await fetch('@Url.Page("/Index", "Messages")');
        const messages = await response.json();
        const messagesList = document.getElementById('messagesList');
        messagesList.innerHTML = '';
        messages.forEach(message => {
            const li = document.createElement('li');
            li.textContent = message;
            messagesList.appendChild(li);
        });
    }

    async function fetchSubscribedTopics() {
        const response = await fetch('@Url.Page("/Index", "SubscribedTopics")');
        const topics = await response.json();
        const topicsList = document.getElementById('subscribedTopicsList');
        topicsList.innerHTML = '';
        topics.forEach(topic => {
            const topicId = topic.replace(/\//g, "_");
            const li = document.createElement('li');
            li.dataset.topic = topic;
            li.innerHTML = `${topic} <span id="count-${topicId}">${getMessageCountForTopic(topic)}</span>`;
            topicsList.appendChild(li);
        });
    }

    async function updateMessageCountForTopics() {
        const topicsList = document.getElementById('subscribedTopicsList');
        const topics = Array.from(topicsList.children).map(li => li.dataset.topic);
        for (const topic of topics) {
            const count = await getMessageCountForTopic(topic);
            document.getElementById(`count-${topic.replace(/\//g, "_")}`).textContent = count;
        }
    }

    async function getMessageCountForTopic(topic) {
        const response = await fetch(`@Url.Page("/Index", "MessageCountForTopic")?topic=${topic}`);
        const count = await response.json();
        return count;
    }

    function showSection(section) {
        document.querySelectorAll('.section').forEach(sec => sec.style.display = 'none');
        document.getElementById(section + '-section').style.display = 'block';
    }

    setInterval(() => {
        fetchMessages();
        fetchSubscribedTopics();
        updateMessageCountForTopics();
    }, 500);
    </script>